[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[output_pin beeper]
pin: EXP1_1

[neopixel btt_mini12864]
#   To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#   Set RGB values on boot up for each Neopixel.
#   Index 3 = display, Index 1 and 2 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3


# Shutdown and reboot
[menu __main __setup __restart]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Host control

# Add a park menu item.
[menu __main __control __park]
type: command
name: Park toolhead
enable: {printer.idle_timeout.state != "Printing" or
         printer.pause_resume.is_paused}
index: 0
gcode:
  PARK

[menu __main __setup __restart __shutdown]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Shutdown host
gcode: SHUTDOWN

### menu octoprint ###
[menu __main __octoprint]
type: disabled

[menu __main __control __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={printer["gcode_macro _USER_VARIABLES"].light_intensity_start_print if menu.input else 0}

[menu __main __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
realtime: True
gcode:
    SET_PIN PIN=caselight VALUE={menu.input*100}

################################################################################
# Replace filament loading with our own macros
################################################################################
[menu __main __filament]
type: list
name: Filament
enable: {printer.idle_timeout.state != "Printing" or
         printer.pause_resume.is_paused}

# Hide the old load/unload commands.
[menu __main __filament __loadf]
type: command
name: Load Fil. fast
enable: False

[menu __main __filament __loads]
type: command
name: Load Fil. slow
enable: False

[menu __main __filament __unloadf]
type: command
name: Unload Fil.fast
enable: False

[menu __main __filament __unloads]
type: command
name: Unload Fil.slow
enable: False

# Add new load/unload using our macros.
[menu __main __filament __load]
type: command
index: 1
name: Load Filament
gcode:
  LOAD_FILAMENT

[menu __main __filament __unload]
type: command
index: 2
name: Unload Filament
gcode:
  UNLOAD_FILAMENT

[menu __main __filament __purge]
type: command
index: 3
name: Purge Filament
gcode:
  PURGE

[menu __main __filament __clean]
type: command
index: 3
name: Clean Nozzle
gcode:
  CLEAN_NOZZLE
